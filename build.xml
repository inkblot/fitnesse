<project name="Fitnesse" default="dist" basedir=".">
    <description>
        Fitnesse is a wiki wrapper for fit, an acceptance test framework.
    </description>

    <property environment="env"/>
    <property name="src" location="${basedir}/src"/>
    <property name="resources" location="${basedir}/resources"/>
    <property name="build" location="${basedir}/build"/>
    <property name="build.classes" location="${build}/classes"/>
    <property name="test.classes" location="${build}/test/classes"/>
    <property name="test.results" location="${build}/test/results"/>
    <property name="lib" location="${basedir}/lib"/>
    <property name="lib.runtime" location="${lib}/runtime"/>
    <property name="lib.test" location="${lib}/test"/>
    <property name="dist" location="${basedir}/dist"/>
    <property name="fitnesse.jar" location="${dist}/fitnesse.jar"/>
    <property name="temp" location="${build}/tmp"/>
    <property name="built.by" value="Nate Riffe &lt;inkblot@movealong.org&gt;"/>

    <import file="build-ivy.xml"/>

    <target name="clean" description="delete all build-generated data">
        <delete dir="${build}"/>
        <delete dir="${lib}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="init" depends="resolve">
        <mkdir dir="${build}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.classes}/Resources"/>
        <mkdir dir="${test.classes}"/>
        <mkdir dir="${test.results}"/>
        <mkdir dir="${dist}"/>
        <mkdir dir="${temp}"/>
    </target>

    <target name="jar" depends="compile, build-properties, createUpdateLists" description="generate the jar file">
        <jar jarfile="${fitnesse.jar}">
            <manifest>
                <attribute name="Built-By" value="${built.by}"/>
                <attribute name="Main-Class" value="fitnesseMain.FitNesseMain"/>
            </manifest>

            <fileset dir="${build.classes}" includes="**/*"/>
            <fileset dir="${resources}" includes="**/*"/>
        </jar>
    </target>

    <target name="createUpdateLists" depends="copyResources" description="creates two lists of files to be udpated">
        <java classpath="${build.classes}" classname="fitnesse.updates.UpdateFileList" failonerror="true">
            <arg value="-baseDirectory:${build.classes}/Resources"/>
            <arg value="-updateList:${build.classes}/Resources/updateList"/>
            <arg value="-doNotCopyList:${build.classes}/Resources/updateDoNotCopyOverList"/>
            <arg value="-doNotReplace:FitNesseRoot/files/css/fitnesse.css"/>
            <arg value="-doNotReplace:FitNesseRoot/files/css/fitnesse_print.css"/>
            <arg value="-doNotReplace:FitNesseRoot/FrontPage/content.txt"/>
            <arg value="-doNotReplace:FitNesseRoot/FrontPage/properties.xml"/>
            <arg value="FitNesseRoot/files/images"/>
            <arg value="FitNesseRoot/files/css"/>
            <arg value="FitNesseRoot/files/javascript"/>
            <arg value="FitNesseRoot/files/html"/>
            <arg value="FitNesseRoot/files/templates"/>
            <arg value="FitNesseRoot/FrontPage"/>
            <arg value="FitNesseRoot/PageFooter"/>
            <arg value="FitNesseRoot/PageHeader"/>
        </java>
    </target>

    <target name="copyResources" description="copy images, css, and other resources into the classes directory">
        <copy todir="${build.classes}/Resources/FitNesseRoot">
            <fileset dir="FitNesseRoot">
                <include name="files/images/**"/>
                <include name="files/css/*.css"/>
                <include name="files/javascript/**/*.js"/>
                <include name="files/html/**"/>
                <include name="files/templates/**"/>
                <exclude name="files/juUnitTestLink.js"/>
                <exclude name="files/**/unused/**"/>
                <include name="FrontPage/**/content.txt"/>
                <include name="FrontPage/**/properties.xml"/>
                <include name="PageHeader/**/content.txt"/>
                <include name="PageHeader/**/properties.xml"/>
                <include name="PageFooter/**/content.txt"/>
                <include name="PageFooter/**/properties.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="compile" depends="init" description="compile the source (make)">
        <javac srcdir="${src}" destdir="${build.classes}" debug="true" source="1.6" target="1.6" includeantruntime="false">
            <classpath>
                <fileset dir="${lib.runtime}" includes="*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="build-properties" depends="compile">
        <tstamp/>
        <propertyfile file="${build.classes}/fitnesse/build.properties">
            <entry key="build.version" value="v${DSTAMP}"/>
        </propertyfile>
    </target>

    <target name="compile-tests" depends="compile" description="compile the unit tests">
        <javac srcdir="test" destdir="${test.classes}" debug="true" source="1.6" target="1.6" includeantruntime="false">
            <classpath>
                <pathelement path="${test.classes}"/>
                <pathelement path="${build.classes}"/>
                <fileset dir="${lib.test}" includes="*.jar"/>
                <fileset dir="${lib.runtime}" includes="*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="unit_test" depends="compile, build-properties, compile-tests" description="run the unit tests">
        <junit forkmode="once" fork="yes" printsummary="no" haltonfailure="yes" haltonerror="yes" dir="${build}">
            <classpath>
                <pathelement path="${test.classes}"/>
                <pathelement path="${resources}"/>
                <pathelement path="${build.classes}"/>
                <fileset dir="${lib.test}" includes="*.jar"/>
                <fileset dir="${lib.runtime}" includes="*.jar"/>
            </classpath>
            <sysproperty key="java.io.tmpdir" value="${temp}"/>
            <formatter type="xml" usefile="true"/>
            <formatter type="plain" usefile="false"/>
            <batchtest todir="${test.results}">
                <fileset dir="test">
                    <include name="**/*Test.java"/>
                    <exclude name="**/ShutdownResponderTest.java"/>
                    <exclude name="**/QueryTableBaseTest.java"/>
                    <exclude name="**/Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="acceptance_tests_xml" depends="jar">
        <java classname="fitnesseMain.FitNesseMain" failonerror="true" fork="true" output="${build}/fitnesse-results.xml">
            <classpath>
                <fileset file="${fitnesse.jar}"/>
                <fileset dir="${lib.runtime}" includes="*.jar"/>
            </classpath>
            <sysproperty key="java.io.tmpdir" value="${temp}"/>
            <arg value="-c"/>
            <arg value="FitNesse.SuiteAcceptanceTests?suite&amp;format=xml"/>
            <arg value="-p"/>
            <arg value="9234"/>
        </java>
    </target>

    <target name="acceptance_tests" depends="jar">
        <java classname="fitnesseMain.FitNesseMain" failonerror="true" fork="true">
            <classpath>
                <fileset file="${fitnesse.jar}"/>
                <fileset dir="${lib.runtime}" includes="*.jar"/>
            </classpath>
            <sysproperty key="java.io.tmpdir" value="${temp}"/>
            <arg value="-c"/>
            <arg value="FitNesse.SuiteAcceptanceTests?suite&amp;format=text"/>
            <arg value="-p"/>
            <arg value="9234"/>
        </java>
    </target>

    <target name="dist" depends="clean,unit_test,acceptance_tests_xml,jar"/>

</project>
