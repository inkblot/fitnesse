<project name="Fitnesse" default="dist" basedir=".">
    <description>
        Fitnesse is a wiki wrapper for fit, an acceptance test framework.
    </description>

    <property name="src" location="${basedir}/src"/>
    <property name="build" location="${basedir}/build"/>
    <property name="build.classes" location="${build}/classes"/>
    <property name="test.classes" location="${build}/test/classes"/>
    <property name="test.results" location="${build}/test/results"/>
    <property name="lib" location="${basedir}/lib"/>
    <property name="dist" location="${basedir}/dist"/>
    <property name="fitnesse.jar" location="${dist}/fitnesse.jar"/>
    <property name="temp" location="${build}/tmp"/>

    <target name="clean" description="delete all build-generated data">
        <delete dir="${build}"/>
        <delete dir="${lib}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="init">
        <mkdir dir="${build}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.classes}/Resources"/>
        <mkdir dir="${test.classes}"/>
        <mkdir dir="${test.results}"/>
        <mkdir dir="${lib}"/>
        <mkdir dir="${lib}/compile"/>
        <mkdir dir="${lib}/test"/>
        <mkdir dir="${dist}"/>
        <mkdir dir="${temp}"/>
    </target>

    <target name="jar" depends="build, createUpdateLists" description="generate the jar file">
        <jar jarfile="${fitnesse.jar}" basedir="${build.classes}">
            <include name="**/*.class"/>
            <include name="Resources/**"/>
            <include name="tasks.properties"/>

            <zipfileset src="legacy-lib/htmlparser.jar"/>
            <zipfileset src="legacy-lib/json.jar"/>
            <zipfileset src="legacy-lib/velocity-1.6.2-dep.jar"/>

            <manifest>
                <attribute name="Built-By" value="Object Mentor, Inc."/>
                <attribute name="Main-Class" value="fitnesseMain.FitNesseMain"/>
            </manifest>
        </jar>
    </target>

    <target name="createUpdateLists" depends="copyResources" description="creates two lists of files to be udpated">
        <java classpath="${build.classes}" classname="fitnesse.updates.UpdateFileList" failonerror="true">
            <arg value="-baseDirectory:${build.classes}/Resources"/>
            <arg value="-updateList:${build.classes}/Resources/updateList"/>
            <arg value="-doNotCopyList:${build.classes}/Resources/updateDoNotCopyOverList"/>
            <arg value="-doNotReplace:FitNesseRoot/files/css/fitnesse.css"/>
            <arg value="-doNotReplace:FitNesseRoot/files/css/fitnesse_print.css"/>
            <arg value="-doNotReplace:FitNesseRoot/FrontPage/content.txt"/>
            <arg value="-doNotReplace:FitNesseRoot/FrontPage/properties.xml"/>
            <arg value="FitNesseRoot/files/images"/>
            <arg value="FitNesseRoot/files/css"/>
            <arg value="FitNesseRoot/files/javascript"/>
            <arg value="FitNesseRoot/files/html"/>
            <arg value="FitNesseRoot/files/templates"/>
            <arg value="FitNesseRoot/FrontPage"/>
            <arg value="FitNesseRoot/PageFooter"/>
            <arg value="FitNesseRoot/PageHeader"/>
        </java>
    </target>

    <target name="copyResources" description="copy images, css, and other resources into the classes directory">
        <copy todir="${build.classes}/Resources/FitNesseRoot">
            <fileset dir="FitNesseRoot">
                <include name="files/images/**"/>
                <include name="files/css/*.css"/>
                <include name="files/javascript/**/*.js"/>
                <include name="files/html/**"/>
                <include name="files/templates/**"/>
                <exclude name="files/juUnitTestLink.js"/>
                <exclude name="files/**/unused/**"/>
                <include name="FrontPage/**/content.txt"/>
                <include name="FrontPage/**/properties.xml"/>
                <include name="PageHeader/**/content.txt"/>
                <include name="PageHeader/**/properties.xml"/>
                <include name="PageFooter/**/content.txt"/>
                <include name="PageFooter/**/properties.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="compile" depends="init, stamp-version" description="compile the source (make)">
        <javac srcdir="src" destdir="${build.classes}" debug="true" source="1.6" target="1.6">
            <classpath>
                <pathelement path="${build.classes}"/>
                <fileset dir="${lib}/compile" includes="*.jar"/>
                <fileset dir="${basedir}/legacy-lib" includes="*.jar"/>
            </classpath>
        </javac>
        <copy file="extra/ant/tasks.properties" todir="${build.classes}"/>
    </target>

    <target name="compile-tests" depends="compile" description="compile the unit tests">
        <javac srcdir="test" destdir="${test.classes}" debug="true" source="1.6" target="1.6">
            <classpath>
                <pathelement path="${test.classes}"/>
                <pathelement path="${build.classes}"/>
                <fileset dir="${lib}/test" includes="*.jar"/>
                <fileset dir="${lib}/compile" includes="*.jar"/>
                <fileset dir="${basedir}/legacy-lib" includes="*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="stamp-version">
        <delete file="pom.xml"/>
        <delete file="src/fitnesse/FitNesseVersion.java"/>
        <tstamp/>
        <filter token="version" value="${DSTAMP}"/>
        <copy filtering="true" file="templates/pom.xml.template" tofile="pom.xml"/>
        <copy filtering="true" file="templates/FitNesseVersion.java.template"
              tofile="src/fitnesse/FitNesseVersion.java"/>
    </target>

    <target name="unit_test" depends="compile,compile-tests" description="run the unit tests">
        <junit forkmode="once" fork="yes" printsummary="no" haltonfailure="yes" haltonerror="yes" dir="${build}">
            <classpath>
                <pathelement path="${test.classes}"/>
                <pathelement path="${build.classes}"/>
                <fileset dir="${lib}/test" includes="*.jar"/>
                <fileset dir="${lib}/compile" includes="*.jar"/>
                <fileset dir="${basedir}/legacy-lib" includes="*.jar"/>
            </classpath>
            <sysproperty key="java.io.tmpdir" value="${temp}"/>
            <formatter type="xml" usefile="true"/>
            <formatter type="plain" usefile="false"/>
            <batchtest todir="${test.results}">
                <fileset dir="test">
                    <include name="**/*Test.java"/>
                    <exclude name="**/ShutdownResponderTest.java"/>
                    <exclude name="**/QueryTableBaseTest.java"/>
                    <exclude name="**/Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="acceptance_tests_xml" depends="jar">
        <java jar="${fitnesse.jar}" failonerror="true" fork="true" output="${build}/fitnesse-results.xml">
            <sysproperty key="java.io.tmpdir" value="${temp}"/>
            <arg value="-c"/>
            <arg value="FitNesse.SuiteAcceptanceTests?suite&amp;format=xml"/>
            <arg value="-p"/>
            <arg value="9234"/>
        </java>
    </target>

    <target name="acceptance_tests" depends="jar">
        <java jar="${fitnesse.jar}" failonerror="true" fork="true">
            <sysproperty key="java.io.tmpdir" value="${temp}"/>
            <arg value="-c"/>
            <arg value="FitNesse.SuiteAcceptanceTests?suite&amp;format=text"/>
            <arg value="-p"/>
            <arg value="9234"/>
        </java>
    </target>

    <target name="unit_tests" depends="clean, unit_test"
            description="builds code from scratch, runs all the unit tests"/>

    <target name="build" depends="clean, compile" description="clean, then compile the source"/>

    <target name="dist" depends="unit_tests,acceptance_tests_xml,jar"/>

</project>
